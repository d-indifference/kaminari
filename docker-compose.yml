version: '3.9'
services:
  postgres:
    container_name: db.kaminari
    hostname: db.kaminari
    image: postgres:13.3
    env_file:
      - .env
    volumes:
      - ${KAMINARI_POSTGRES_VOLUME}:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    restart: unless-stopped
    networks:
      - kaminari-network

  pgadmin:
    container_name: pgadmin.kaminari
    hostname: pgadmin.kaminari
    depends_on:
      - postgres
    image: dpage/pgadmin4:5.7
    env_file:
      - .env
    volumes:
      - ${KAMINARI_PGADMIN_VOLUME}:${PGADMIN_DATA}
    ports:
      - '${PGADMIN_EXTERNAL_PORT}:80'
    restart: unless-stopped
    networks:
      - kaminari-network

  kaminari:
    container_name: app.kaminari
    hostname: app.kaminari
    depends_on:
      - postgres
    image: kaminari
    env_file:
      - .env
    build:
      dockerfile: './Dockerfile'
      context: '.'
      args:
        KAMINARI_VOLUMES_DIR: '${KAMINARI_VOLUMES_DIR}'
        KAMINARI_ASSETS_PUBLIC_DIR: '${KAMINARI_ASSETS_PUBLIC_DIR}'
        KAMINARI_FILES_DIR: '${KAMINARI_FILES_DIR}'
    ports:
      - '${KAMINARI_EXTERNAL_PORT}:${KAMINARI_INTERNAL_PORT}'
    expose:
      - '${KAMINARI_EXTERNAL_PORT}'
    volumes:
      - ./${KAMINARI_ASSETS_PUBLIC_DIR}/${KAMINARI_FILES_DIR}:/app/${KAMINARI_ASSETS_PUBLIC_DIR}/${KAMINARI_FILES_DIR}
      - ${KAMINARI_SETTINGS_VOLUME}:/app/${KAMINARI_VOLUMES_DIR}/kaminari
    networks:
      - kaminari-network

networks:
  kaminari-network:
    name: 'net.kaminari'
    driver: bridge